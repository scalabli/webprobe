Metadata-Version: 2.1
Name: webprobe
Version: 2022.1
Summary: Nifty and sophisticated web scanner
Home-page: https://github.com/scalabli
Author: Gerrishon Sirere
Author-email: scalabli@proton.me
Maintainer: Scalabli.
Maintainer-email: scalabli@proton.me
License: MIT
Project-URL: Donate, https://ko-fi.com/scalabli
Project-URL: Documentation, https://github.com/scalabli/webprobe
Project-URL: Changes, https://github.com/scalabli/webprobe
Project-URL: Source Code, https://github.com/scalabli/webprobe
Project-URL: Issue Tracker, https://github.com/scalabli/webprobe/issues/
Project-URL: Twitter, https://twitter.com/scalabli
Project-URL: Chat, https://gitter.im/scalabli
Keywords: infosec,bug bounty,pentesting,security
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE

# webprobe
Nifty and sophisticated web path scanner

A sophisticated web path scanner designed for the most descerning bug bounty hunters.


This CLI brute forces directories and files in webservers.


### Installation & Usage
                                                
**Requirement: python 3.8 or higher**

- Install with PyPi: `pip3 install webprobe`


### How to use

Some common examples on how to use webprobe.

:NOTE: If you need to see a list of all options, just use the **-h** argument

To use multiple wordlists, you can separate your wordlists with commas. Example: `wordlist1.txt,wordlist2.txt`

### Simple usage

```python

webprobe -u https://target.com

```

```python

webprobe -e php,html,js -u https://target.com

```

```
webprobe -e php,html,js -u https://target.com -w /path/t
o/wordlist

```

## Pausing progress

You can pause the scanning progress with CTRL+C  from here, you can save the progress (and continue later), skip the current target, or skip the current sub-directory.

## Recursion
- Brutforcing recursively can be achieved using `-r` or `--recursive` flag.

For example, if webprobe finds `admin/`, it will brute-force `admin/* ` (`*` is where it brute forces).

```python

webprobe -e php,html,js -u https://example.com -r

```

- You can set the max recursion depth with `--recursion-depth` and status codes to recurse with `--recursion-status`

```python

webprobe -e php,html,js -u https://example.com -r --recursion-depth 3 --recursion-status 200-399

```
You can brute force recursively all found paths, not just paths end with `/` using `--force-recursive` flag.


  - **Deep recursive**: Recursive brute-force all depths of a path (`a/b/c` =>
 add `a/`, `a/b/`)

- If there are sub-directories that you do not want to brute-force recursively
, use `--exclude-subdirs`                                                     
```
python3 dirsearch.py -e php,html,js -u https://target -r --exclude-subdirs image/,media/,css/                                                               ```

## Licenseüìë

 [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

This software is licensed under the `MIT License`. See the [License](https://github.com/scalabli/webprobe/blob/master/LICENSE) file in the top distribution directory for the full license text.

## DonateüéÅ
In order to for us to maintain this project and grow our community of contributors.
[Donate](https://ko-fi.com/scalabli)


## Code of Conduct
Code of Conduct is adapted from the Contributor Covenant, version 1.2.0 available at [Code of Conduct](http://contributor-covenant.org/version/1/2/0/)
